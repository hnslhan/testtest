# -*- coding: utf-8 -*-
"""Hotel Booking Model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wWgJ9v1L0CZ5pieX6Yhx9l2UORLkCHoF
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report, accuracy_score
from xgboost import XGBClassifier
import pickle

class HotelBookingModel:
    def __init__(self, file_path):
        self.file_path = file_path
        self.df = None
        self.model = None
        self.encoder = LabelEncoder()

    def load_data(self):
        self.df = pd.read_csv(self.file_path)

    def preprocess(self):
        drop_cols = ['booking_ID', 'arrival_date', 'arrival_month', 'arrival_year']
        self.df.drop(columns=[col for col in drop_cols if col in self.df.columns], inplace=True)
        cat_cols = self.df.select_dtypes(include='object').columns
        for col in cat_cols:
            self.df[col] = self.encoder.fit_transform(self.df[col])

    def train_model(self):
        X = self.df.drop('booking_status', axis=1)
        y = self.df['booking_status']
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

        self.model = XGBClassifier(use_label_encoder=False, eval_metric='logloss')
        self.model.fit(X_train, y_train)

        y_pred = self.model.predict(X_test)
        print("Classification Report:\n", classification_report(y_test, y_pred))
        print("Accuracy:", accuracy_score(y_test, y_pred))

    def save_model(self, output_path='best_model.pkl'):
      with open(output_path, 'wb') as file:
        pickle.dump({'model': self.model, 'encoder': self.encoder}, file)

trainer = HotelBookingModel('Dataset_B_hotel.csv')
trainer.load_data()
trainer.preprocess()
trainer.train_model()
trainer.save_model()